{"ast":null,"code":"import React, { useState } from \"react\";\nimport { Container, Typography, Box, TextField, Button } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport logo from \"../dal_logo.png\"; // Update this path to your actual logo file\nimport backgroundImage from \"../background.jpg\"; // Update this path to your actual background image file\n\n// const SecurityQuestionPage = () => {\n//   const [answer, setAnswer] = useState(\"\");\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n\n//     // Assuming you already have the email or other necessary details stored\n//     const userEmail = \"user@example.com\"; // Replace this with the actual user email\n\n//     // API URL - replace 'your-api-gateway-url' with your actual API Gateway endpoint\n//     const apiUrl = 'https://your-api-gateway-url/verifySecurityAnswer';\n\n//     try {\n//       const response = await fetch(apiUrl, {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({\n//           email: userEmail,\n//           securityAnswer: answer\n//         })\n//       });\n\n//       const responseData = await response.json();\n//       if (response.ok && responseData.status === 'success') {\n//         console.log(\"Verification Success:\", responseData);\n//         navigate(\"/dashboard\"); // Navigate only on successful verification\n//       } else {\n//         console.error(\"Verification Failed:\", responseData.message);\n//         alert('Verification failed: ' + responseData.message); // Display error message\n//       }\n//     } catch (error) {\n//       console.error(\"Network Error:\", error);\n//       alert('Network error, please try again later.');\n//     }\n//   };\n\n//   return (\n//     <Container\n//       component=\"main\"\n//       style={{\n//         backgroundImage: `url(${backgroundImage})`,\n//         backgroundSize: \"cover\",\n//         minHeight: \"100vh\",\n//         display: \"flex\",\n//         alignItems: \"center\",\n//         justifyContent: \"center\",\n//         padding: 0,\n//       }}\n//     >\n//       <Box\n//         sx={{\n//           display: \"flex\",\n//           flexDirection: \"column\",\n//           alignItems: \"center\",\n//           padding: 4,\n//           boxShadow: 3,\n//           borderRadius: 2,\n//           bgcolor: \"background.paper\",\n//           width: \"100%\",\n//           maxWidth: \"400px\",\n//         }}\n//       >\n//         <img\n//           src={logo}\n//           alt=\"Logo\"\n//           style={{ width: \"100px\", marginBottom: \"20px\" }}\n//         />\n//         <Typography component=\"h1\" variant=\"h5\" gutterBottom>\n//           Security Question\n//         </Typography>\n//         <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 1 }}>\n//           <TextField\n//             variant=\"outlined\"\n//             margin=\"normal\"\n//             required\n//             fullWidth\n//             id=\"security-answer\"\n//             label=\"Answer the security question\"\n//             name=\"answer\"\n//             autoFocus\n//             value={answer}\n//             onChange={(e) => setAnswer(e.target.value)}\n//             sx={{ bgcolor: \"background.default\" }}\n//           />\n//           <Button\n//             type=\"submit\"\n//             fullWidth\n//             variant=\"contained\"\n//             color=\"primary\"\n//             sx={{ mt: 3, mb 2, bgcolor: \"primary.main\" }}\n//           >\n//             Submit\n//           </Button>\n//         </Box>\n//       </Box>\n//     </Container>\n//   );\n// };\n\nexport default SecurityQuestionPage;","map":{"version":3,"names":["React","useState","Container","Typography","Box","TextField","Button","useNavigate","logo","backgroundImage","SecurityQuestionPage"],"sources":["/Users/dheemanth/Desktop/Serverless/csci-5410-team-19/dalvacation/src/components/SecurityQuestionPage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Container, Typography, Box, TextField, Button } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport logo from \"../dal_logo.png\"; // Update this path to your actual logo file\nimport backgroundImage from \"../background.jpg\"; // Update this path to your actual background image file\n\n// const SecurityQuestionPage = () => {\n//   const [answer, setAnswer] = useState(\"\");\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n\n//     // Assuming you already have the email or other necessary details stored\n//     const userEmail = \"user@example.com\"; // Replace this with the actual user email\n\n//     // API URL - replace 'your-api-gateway-url' with your actual API Gateway endpoint\n//     const apiUrl = 'https://your-api-gateway-url/verifySecurityAnswer';\n\n//     try {\n//       const response = await fetch(apiUrl, {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({\n//           email: userEmail,\n//           securityAnswer: answer\n//         })\n//       });\n\n//       const responseData = await response.json();\n//       if (response.ok && responseData.status === 'success') {\n//         console.log(\"Verification Success:\", responseData);\n//         navigate(\"/dashboard\"); // Navigate only on successful verification\n//       } else {\n//         console.error(\"Verification Failed:\", responseData.message);\n//         alert('Verification failed: ' + responseData.message); // Display error message\n//       }\n//     } catch (error) {\n//       console.error(\"Network Error:\", error);\n//       alert('Network error, please try again later.');\n//     }\n//   };\n\n//   return (\n//     <Container\n//       component=\"main\"\n//       style={{\n//         backgroundImage: `url(${backgroundImage})`,\n//         backgroundSize: \"cover\",\n//         minHeight: \"100vh\",\n//         display: \"flex\",\n//         alignItems: \"center\",\n//         justifyContent: \"center\",\n//         padding: 0,\n//       }}\n//     >\n//       <Box\n//         sx={{\n//           display: \"flex\",\n//           flexDirection: \"column\",\n//           alignItems: \"center\",\n//           padding: 4,\n//           boxShadow: 3,\n//           borderRadius: 2,\n//           bgcolor: \"background.paper\",\n//           width: \"100%\",\n//           maxWidth: \"400px\",\n//         }}\n//       >\n//         <img\n//           src={logo}\n//           alt=\"Logo\"\n//           style={{ width: \"100px\", marginBottom: \"20px\" }}\n//         />\n//         <Typography component=\"h1\" variant=\"h5\" gutterBottom>\n//           Security Question\n//         </Typography>\n//         <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 1 }}>\n//           <TextField\n//             variant=\"outlined\"\n//             margin=\"normal\"\n//             required\n//             fullWidth\n//             id=\"security-answer\"\n//             label=\"Answer the security question\"\n//             name=\"answer\"\n//             autoFocus\n//             value={answer}\n//             onChange={(e) => setAnswer(e.target.value)}\n//             sx={{ bgcolor: \"background.default\" }}\n//           />\n//           <Button\n//             type=\"submit\"\n//             fullWidth\n//             variant=\"contained\"\n//             color=\"primary\"\n//             sx={{ mt: 3, mb 2, bgcolor: \"primary.main\" }}\n//           >\n//             Submit\n//           </Button>\n//         </Box>\n//       </Box>\n//     </Container>\n//   );\n// };\n\nexport default SecurityQuestionPage;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,UAAU,EAAEC,GAAG,EAAEC,SAAS,EAAEC,MAAM,QAAQ,eAAe;AAC7E,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,IAAI,MAAM,iBAAiB,CAAC,CAAC;AACpC,OAAOC,eAAe,MAAM,mBAAmB,CAAC,CAAC;;AAEjD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeC,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}