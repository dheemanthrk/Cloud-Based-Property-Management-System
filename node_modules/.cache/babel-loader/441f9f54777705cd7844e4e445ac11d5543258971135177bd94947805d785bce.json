{"ast":null,"code":"var _jsxFileName = \"/Users/dheemanth/Desktop/Serverless/csci-5410-team-19/dalvacation/src/components/SecurityQuestionPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Container, Typography, Box, TextField, Button } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\"; // Replace useHistory with useNavigate\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SecurityQuestionPage = () => {\n  _s();\n  const [answer, setAnswer] = useState(\"\");\n  const navigate = useNavigate(); // Use useNavigate instead of useHistory\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    // Here you would typically validate the answer and then proceed\n    console.log(\"Submitted answer:\", answer);\n    // For demonstration purposes, let's assume validation is successful\n    // Redirect to next page after answering security question\n    navigate(\"/dashboard\"); // Replace with your actual next page URL\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        marginTop: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Security Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        noValidate: true,\n        onSubmit: handleSubmit,\n        sx: {\n          mt: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"security-answer\",\n          label: \"Answer the security question\",\n          name: \"answer\",\n          autoFocus: true,\n          value: answer,\n          onChange: e => setAnswer(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          sx: {\n            mt: 3,\n            mb: 2\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(SecurityQuestionPage, \"tctwXHQJbx8yuKKjPtnNZUEMWp4=\", false, function () {\n  return [useNavigate];\n});\n_c = SecurityQuestionPage;\nexport default SecurityQuestionPage;\nvar _c;\n$RefreshReg$(_c, \"SecurityQuestionPage\");","map":{"version":3,"names":["React","useState","Container","Typography","Box","TextField","Button","useNavigate","jsxDEV","_jsxDEV","SecurityQuestionPage","_s","answer","setAnswer","navigate","handleSubmit","event","preventDefault","console","log","component","maxWidth","children","sx","display","flexDirection","alignItems","marginTop","variant","fileName","_jsxFileName","lineNumber","columnNumber","noValidate","onSubmit","mt","margin","required","fullWidth","id","label","name","autoFocus","value","onChange","e","target","type","color","mb","_c","$RefreshReg$"],"sources":["/Users/dheemanth/Desktop/Serverless/csci-5410-team-19/dalvacation/src/components/SecurityQuestionPage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Container, Typography, Box, TextField, Button } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\"; // Replace useHistory with useNavigate\n\nconst SecurityQuestionPage = () => {\n  const [answer, setAnswer] = useState(\"\");\n  const navigate = useNavigate(); // Use useNavigate instead of useHistory\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // Here you would typically validate the answer and then proceed\n    console.log(\"Submitted answer:\", answer);\n    // For demonstration purposes, let's assume validation is successful\n    // Redirect to next page after answering security question\n    navigate(\"/dashboard\"); // Replace with your actual next page URL\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Box\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          marginTop: 2,\n        }}\n      >\n        <Typography component=\"h1\" variant=\"h5\">\n          Security Question\n        </Typography>\n        <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 1 }}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"security-answer\"\n            label=\"Answer the security question\"\n            name=\"answer\"\n            autoFocus\n            value={answer}\n            onChange={(e) => setAnswer(e.target.value)}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Submit\n          </Button>\n        </Box>\n      </Box>\n    </Container>\n  );\n};\n\nexport default SecurityQuestionPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,UAAU,EAAEC,GAAG,EAAEC,SAAS,EAAEC,MAAM,QAAQ,eAAe;AAC7E,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMa,QAAQ,GAAGP,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC,MAAMQ,YAAY,GAAIC,KAAK,IAAK;IAC9BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB;IACAC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEP,MAAM,CAAC;IACxC;IACA;IACAE,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC;EAC1B,CAAC;EAED,oBACEL,OAAA,CAACP,SAAS;IAACkB,SAAS,EAAC,MAAM;IAACC,QAAQ,EAAC,IAAI;IAAAC,QAAA,eACvCb,OAAA,CAACL,GAAG;MACFmB,EAAE,EAAE;QACFC,OAAO,EAAE,MAAM;QACfC,aAAa,EAAE,QAAQ;QACvBC,UAAU,EAAE,QAAQ;QACpBC,SAAS,EAAE;MACb,CAAE;MAAAL,QAAA,gBAEFb,OAAA,CAACN,UAAU;QAACiB,SAAS,EAAC,IAAI;QAACQ,OAAO,EAAC,IAAI;QAAAN,QAAA,EAAC;MAExC;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACbvB,OAAA,CAACL,GAAG;QAACgB,SAAS,EAAC,MAAM;QAACa,UAAU;QAACC,QAAQ,EAAEnB,YAAa;QAACQ,EAAE,EAAE;UAAEY,EAAE,EAAE;QAAE,CAAE;QAAAb,QAAA,gBACrEb,OAAA,CAACJ,SAAS;UACRuB,OAAO,EAAC,UAAU;UAClBQ,MAAM,EAAC,QAAQ;UACfC,QAAQ;UACRC,SAAS;UACTC,EAAE,EAAC,iBAAiB;UACpBC,KAAK,EAAC,8BAA8B;UACpCC,IAAI,EAAC,QAAQ;UACbC,SAAS;UACTC,KAAK,EAAE/B,MAAO;UACdgC,QAAQ,EAAGC,CAAC,IAAKhC,SAAS,CAACgC,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC,eACFvB,OAAA,CAACH,MAAM;UACLyC,IAAI,EAAC,QAAQ;UACbT,SAAS;UACTV,OAAO,EAAC,WAAW;UACnBoB,KAAK,EAAC,SAAS;UACfzB,EAAE,EAAE;YAAEY,EAAE,EAAE,CAAC;YAAEc,EAAE,EAAE;UAAE,CAAE;UAAA3B,QAAA,EACtB;QAED;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB,CAAC;AAACrB,EAAA,CApDID,oBAAoB;EAAA,QAEPH,WAAW;AAAA;AAAA2C,EAAA,GAFxBxC,oBAAoB;AAsD1B,eAAeA,oBAAoB;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}